name: Test, build and deploy Shin Cache Tensei

on: 
    push:
        branch: main
    pull_request:
        branch: main
        
jobs:
    Tests:
        runs-on: ubuntu-latest
        strategy:
            matrix: 
                 dotnet-version: ['6.0.x']
        
        steps:
            - 
              uses: actions/checkout@v3
            - 
              name: SDK ${{ matrix.dotnet-version }}
              uses: actions/setup-dotnet@v2
              with:
                dotnet-version: ${{ matrix.dotnet-version }}
            - 
              name: Dotnet Restore
              run: dotnet restore
            - 
              name: Dotnet Build
              run: dotnet build --configuration Release --no-restore
            - 
              name: Dotnet Test
              run: dotnet test --no-restore --verbosity normal
              
    Build-Docker-Image-Push-DockerHub:
        runs-on: ubuntu-latest
        needs: [Tests]
        steps: 
        
          - 
            name: Checkout
            uses: actions/checkout@v2
            
          - 
            name: Docker Hub Login
            uses: docker/login-action@v1
            with:
                username: ${{ secrets.DOCKERHUB_USER }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}
                
          - 
            name: Setup Docker build
            uses: docker/setup-buildx-action@v1
            
          - 
            name: Build and push
            uses: docker/build-push-action@v2
            with:
                context: .
                file: Dockerfile
                push: true
                tags: ${{ secrets.DOCKERHUB_USER }}/ShinCacheTensei:latest
                
    
    Deploy-Heroku:
        runs-on: ubuntu-latest
        needs: [Tests]
        steps: 
        
           - 
            name: Checkout
            uses: actions/checkout@v2
            
           -
            name: Build, Push and Release a Docker container to Heroku. # Your custom step name
            uses: leandro-rmc/heroku-docker-deploy@v1.3.3 # GitHub action name (leave it as it is).
            with:
              # Below you must provide variables for your Heroku app.

              # The email address associated with your Heroku account.
              # If you don't want to use repository secrets (which is recommended) you can do:
              # email: my.email@example.com
              email: ${{ secrets.HEROKU_EMAIL }}
              
              # Heroku API key associated with provided user's email.
              # Api Key is available under your Heroku account settings.
              heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
              
              # Name of the heroku application to which the build is to be sent.
              heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}

              # (Optional, default: "./")
              # Dockerfile directory.
              # For example, if you have a Dockerfile in the root of your project, leave it as follows:
              dockerfile_directory: ./

              # (Optional, default: "Dockerfile")
              # Dockerfile name.
              dockerfile_name: Dockerfile

              # (Optional, default: "")
              # Additional options of docker build command.
              docker_options: ""

              # (Optional, default: "web")
              # Select the process type for which you want the docker container to be uploaded.
              # By default, this argument is set to "web".
              # For more information look at https://devcenter.heroku.com/articles/process-model
              process_type: web
